#!/usr/bin/env bash
set -euo pipefail

SCRIPT_NAME=$(basename "$0")

usage() {
	cat <<EOF
Usage: $SCRIPT_NAME --lens-api-key KEY [--install-dir DIR] [--binary PATH] [--service-name NAME]

Installs the biblizap-server binary and a systemd service.

Options:
	--lens-api-key KEY    (required) Lens.org API key passed to the server at runtime
	--install-dir DIR     Where to install the binary (default: /usr/bin)
	--binary PATH         Path to the built binary (default: ./target/release/biblizap-server)
	--service-name NAME   Systemd service name (default: biblizap.service)
 	--bind-address ADDR   Address to bind the server (default: 127.0.0.1)
 	--port PORT           Port to listen on (default: 35642)
	-h, --help            Show this help
EOF
	exit 1
}

LENS_API_KEY=""
INSTALL_DIR="/usr/bin"
BINARY_PATH="./target/release/biblizap-server"
SERVICE_NAME="biblizap.service"
SERVICE_USER="biblizap"
SERVICE_GROUP="biblizap"
BIND_ADDRESS="127.0.0.1"
PORT="35642"

SYSTEMCTL_EXISTS=true
if ! command -v systemctl >/dev/null 2>&1; then
	SYSTEMCTL_EXISTS=false
fi

while [ "$#" -gt 0 ]; do
	case "$1" in
		--lens-api-key)
			LENS_API_KEY="$2"; shift 2;;
		--install-dir)
			INSTALL_DIR="$2"; shift 2;;
		--binary)
			BINARY_PATH="$2"; shift 2;;
 		--bind-address)
 			BIND_ADDRESS="$2"; shift 2;;
	 	--port)
	 		PORT="$2"; shift 2;;
		--service-name)
			SERVICE_NAME="$2"; shift 2;;
		-h|--help)
			usage;;
		*)
			echo "Unknown arg: $1" >&2; usage;;
	esac
done

if [ -z "$LENS_API_KEY" ]; then
	echo "--lens-api-key is required" >&2
	usage
fi

if [ "$(id -u)" -ne 0 ]; then
	echo "This installer must be run as root (or via sudo)" >&2
	exit 1
fi

if [ ! -f "$BINARY_PATH" ]; then
	echo "Binary not found at '$BINARY_PATH'" >&2
	echo "Build it first with: ./build.sh --release" >&2
	exit 1
fi

mkdir -p "$INSTALL_DIR"

if [ "$SYSTEMCTL_EXISTS" = false ]; then
	echo "systemctl not found: installing binary only to $INSTALL_DIR"
	install -m 0755 "$BINARY_PATH" "$INSTALL_DIR/biblizap-server"
	echo "Installed binary to $INSTALL_DIR/biblizap-server"
	exit 0
fi

echo "Creating system user/group '$SERVICE_USER' if needed..."
if ! getent group "$SERVICE_GROUP" >/dev/null; then
	groupadd --system "$SERVICE_GROUP"
fi
if ! id -u "$SERVICE_USER" >/dev/null 2>&1; then
	useradd --system --no-create-home --shell /usr/sbin/nologin --gid "$SERVICE_GROUP" "$SERVICE_USER"
fi

echo "Installing binary to $INSTALL_DIR"
install -m 0755 "$BINARY_PATH" "$INSTALL_DIR/biblizap-server"

# Write config for the service (only when systemd is present)
CONFIG_DIR="/etc/biblizap"
CONFIG_FILE="$CONFIG_DIR/biblizap.toml"
mkdir -p "$CONFIG_DIR"
chmod 700 "$CONFIG_DIR"
chown ${SERVICE_USER}:${SERVICE_GROUP} "$CONFIG_DIR"
# create config with restrictive perms
umask 077
cat > "$CONFIG_FILE" <<EOF
# Biblizap configuration (generated by install.sh)
bind_address = "${BIND_ADDRESS}"
port = ${PORT}
lens_api_key = "${LENS_API_KEY}"
EOF
chmod 600 "$CONFIG_FILE"
chown ${SERVICE_USER}:${SERVICE_GROUP} "$CONFIG_FILE"
umask 022
echo "Wrote config to $CONFIG_FILE (mode 600, owner ${SERVICE_USER})"

SERVICE_PATH="/etc/systemd/system/$SERVICE_NAME"


echo "Writing systemd unit to $SERVICE_PATH"
cat > "$SERVICE_PATH" <<EOF
[Unit]
Description=Biblizap Server Service
After=network.target

[Service]
Type=simple
# The server will load /etc/biblizap/biblizap.toml for bind_address, port and lens_api_key
ExecStart=$INSTALL_DIR/biblizap-server
Restart=on-failure
User=${SERVICE_USER}
Group=${SERVICE_GROUP}

[Install]
WantedBy=multi-user.target
EOF

chmod 644 "$SERVICE_PATH"

echo "Reloading systemd daemon, enabling and starting service ($SERVICE_NAME)"
systemctl daemon-reload
systemctl enable --now "$SERVICE_NAME"

echo "Installation complete. Service status:"
systemctl status --no-pager "$SERVICE_NAME" || true

echo "If you need to change the Lens API key later, edit the unit file at $SERVICE_PATH and run:"
echo "  systemctl daemon-reload && systemctl restart $SERVICE_NAME"

exit 0


